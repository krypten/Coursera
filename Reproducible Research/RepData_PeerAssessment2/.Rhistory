x
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
x <- NULL
for(i in id) {
if (i < 10) {
filename <- paste("00", i, ".csv", sep="")
} else if (i < 100) {
filename <- paste("0", i, ".csv", sep="")
} else {
filename <- paste(i, ".csv", sep="")
}
f <- file(file.path(getwd() , paste(directory, "/", filename , sep="")))
dt <- read.csv(f)
good <- complete.cases(dt)
tmp <- subset(dt , good)
x <- rbind(x, c(i , nrow(tmp)))
#close(f)
}
names(x) <- c("id" , "nobs")
x
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
names(x)
names(dt)
dt <- read.csv(f)
good <- complete.cases(dt)
source('~/complete.R')
complete("specdata", 1)
complete("specdata", 1)
source('~/complete.R')
source('~/complete.R')
complete("specdata", 1)
source('~/complete.R')
complete("specdata", 1)
complete("specdata", 1)
source('~/complete.R')
source('~/complete.R')
complete("specdata", 1)
!corr
!cor
?cor
source('~/corr.R')
source('~/complete.R')
cr <- corr("specdata", 150)
head(cr)
cr
source('~/corr.R')
cr <- corr("specdata", 150)
source('~/corr.R')
cr <- corr("specdata", 150)
cr
class(cr)
dim(cr)
source('~/.active-rstudio-document')
source('~/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
cr
source('~/corr.R')
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata", 5000)
summary(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
?submit()
?submit
?s?ubmit
??submit
submit
source("http://d396qusza40orc.cloudfront.net/rprog%3Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source(file="~/rprog_scripts_submitscript1.R")
submit
submit()
submit()
submit()
submit()
submit()
submit()
submit()8
submit()
submit()
submit()
submit()
source('~/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit
submit()
submit()
source('~/complete.R')
submit()
source('~/complete.R')
source('~/complete.R')
submit()
submit()
source('~/complete.R')
submit()
source('~/complete.R')
submit()
source('~/complete.R')
submit()
source('~/complete.R')
submit()
source('~/complete.R')
complete("specdata", 1)
source('~/complete.R')
complete("specdata", 1)
complete("specdata")
source('~/complete.R')
complete("specdata", 1)
dim(x)
source('~/complete.R')
complete("specdata", 1)
complete("specdata")
source('~/complete.R')
complete("specdata")
source('~/.active-rstudio-document')
source('~/complete.R')
complete("specdata")
list
list("foo" <- c(1,2))
v <- list("foo" <- c(1,2))
v$foo
v[foo]
source('~/complete.R')
complete("specdata")
source('~/complete.R')
source('~/complete.R')
complete("specdata")
x <- complete("specdata")
x[.2]
x[,2]
x[1]
x[2]
class(x)
source('~/complete.R')
x <- complete("specdata")
x[,1]
x[,2]
class(x)
names(x)
colnames(x)
x$id
x$"id"
x["id"]
x[id]
x["id]
x["id"]
x["id"]
x[,"id"]
attributes(x)
d <- dataframe(id = x[,1], nobs = x[,2])
d <- data.frame(id = x[,1], nobs = x[,2])
d
d$id
d$nobs
submit()
source('~/complete.R')
d$nobs
submit()
submit()
source(file="~/rprog_scripts_submitscript1.R")
submit()
submit()
submit()
submit()
source('~/complete.R')
complete("specdata", 1)
d <- complete("specdata", 1)
d
source('~/complete.R')
d <- complete("specdata", 1)
source('~/complete.R')
d <- complete("specdata", 1)
d
source(file="~/rprog_scripts_submitscript1.R")
submit()
submit()
submit()
source('~/complete.R')
d <- complete("specdata", 1)
d
source(file="~/git//ProgrammingAssignment2/cachematrix.R")
x <- matrix(1, 2,2)
x
source(file="~/git//ProgrammingAssignment2/cachematrix.R")
d <- makeCacheMatrix(x)
d
m.setinverse()
d.setinverse()
d
d()
d.solve()
solve(d)
solve(x)
x <- matrix(1:4, 2,2)
d <- makeCacheMatrix(x)
d$setinverse
d$getinverse
d$getinverse()
d$setinverse(x)
d$getinverse()
d$setinverse(solve(x))
d$getinverse()
source(file="~/git//ProgrammingAssignment2/cachematrix.R")
x
makeCacheMatrix(x)
d <- makeCacheMatrix(x)
d$set(x)
d$get()
x <- CacheSolve(d)
x <- cacheSolve(d)
x
x <- cacheSolve(d)
x
x <- matrix(4:1 , 2, 2)
x
d$set(x)
cacheSolve(d)
cacheSolve(d)
f <- file(file.path(getwd(), "~/R Programming/week 3/outcome-of-care-measures.csv"))
dt <- date.frame(read.csv(f))
dt <- data.frame(read.csv(f))
f <- file(file.path(getwd(), "~/R Programming/week 3/outcome-of-care-measures.csv"))
dt <- data.frame(read.csv(f))
dt
dt()
df <- data.frame(read.csv(f))
f <- file(file.path(getwd(), "~/R Programming/week 3/outcome-of-care-measures.csv"))
x <- read.csv(f)
x <- read.csv(f, colClasses = "character")
f <- file(file.path(getwd(), "~/R Programming/week 3/outcome-of-care-measures.csv"))
x <- read.csv(f, colClasses = "character")
f <- file(file.path(getwd(), "R Programming/week 3/outcome-of-care-measures.csv"))
x <- read.csv(f, colClasses = "character")
x
df
x <- data.frame(x)
x
clear
outcome[, 11] <- as.numeric(x[, 11])
x[, 11] <- as.numeric(x[, 11])
hist(x[,11])
outcome[, 11] <- as.numeric(x[, 11])
names(outcomes)
names(outcome)
names(x)
source('~/R Programming/week 3/best.R')
best("TX", "heart attack")
head(x$State)
x <- subset(outcomes,outcomes[,7] == "AL")
x <- subset(x, x[,7] == "AL")
x
x$State
nrow(x)
names(x)
source('~/R Programming/week 3/best.R')
best("TX", "heart attack")
source('~/R Programming/week 3/best.R')
best("TX", "heart attack")
source('~/R Programming/week 3/best.R')
best("TX", "heart attack")
source('~/R Programming/week 3/best.R')
source('~/R Programming/week 3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "pneumonia")
best("MD", "heart attack")
"FORT DUNCAN MEDICAL CENTER"
best("TX", "heart failure")
best("BB", "heart attack")
best("NY", "hert attack")
source('~/R Programming/week 3/best.R')
best("NY", "hert attack")
source('~/R Programming/week 3/best.R')
source('~/R Programming/week 3/best.R')
best("NY", "hert attack")
best("BB", "heart attack")
best("TX", "heart failure")
names(x)
source('~/R Programming/week 3/best.R')
best("TX", "heart failure")
best("MD", "pneumonia")
subset(x, x$Hospital.Name == "FORT DUNCAN MEDICAL CENTER")
y <- subset(x, x$Hospital.Name == "FORT DUNCAN MEDICAL CENTER")
y
y <- subset(x, x$Hospital.Name == "FORT DUNCAN MEDICAL CENTER" & x$State == "TX")
y
y <- subset(x, x$Hospital.Name == "FORT DUNCAN MEDICAL CENTER" & x$State == "TX")
y
x$Hospital.Name == "FORT DUNCAN MEDICAL CENTER"
x$Hospital.Name == FORT DUNCAN MEDICAL CENTER
x$Hospital.Name == "FORT DUNCAN MEDICAL CENTER"
x$Hospital.Name = "FORT DUNCAN MEDICAL CENTER"
x$Hospital.Name
source('~/R Programming/week 3/best.R')
source('~/R Programming/week 3/best.R')
best("TX", "heart failure")
source('~/R Programming/week 3/best.R')
best("TX", "heart failure")
source('~/R Programming/week 3/best.R')
submit()
NEI <- readRDS("ExData_Plotting2/summarySCC_PM25.rds")
SCC <- readRDS("ExData_Plotting2/Source_Classification_Code.rds")
SCC[1,]
x1 <- SCC[grep("Coal", unique(SCC$SCC.Level.Three)),]
x2 <- SCC[grep("Coal", unique(SCC$SCC.Level.Four)),]
intesect(x1, x2)
i <- intesect(x1, x2)
library(reshape2)
i <- intesect(x1, x2)
i <- intersect(x1, x2)
i
x1
x2
x <- union(x1, x2)
x
names(x)
colnames(x)
?union
names(SCC)
x1 <- SCC[grep("ehicle", unique(SCC$SCC.Level.One)),]
x1
SCC[grep("ehicle", unique(SCC$SCC.Level.One)),]
head(Data.Category)
head(SCC$Data.Category)
head(SCC$EI.Sector)
SCC[grep("ehicle", unique(SCC$EI.Sector)),]
grep("ehicle", unique(SCC$EI.Sector))
source('~/ExData_Plotting2/plot3.R')
names(NEI)
NEI$Pollutant
names(SCC)
head(SCC$Usage.Notes)
setwd("repdata-02/")
f <- file(file.path(getwd(), "repdata_data_StormData.csv"))
dt <- data.frame(read.csv(f, header=TRUE))
names(dt)
summary(dt)
str(dt)
names(dt)
unique*=(dt$EVTYPE)
unique(dt$EVTYPE)
dim(dt)
names(dt)
unique(dt$PROPDMGEXP)
(dt$PROPDMGEXP)
health
health <- data.frame(EVTYPE = dt$EVTYPE, dt$FATALITIES, dt$INJURIES)
names(health)
health <- data.frame(EVTYPE = dt$EVTYPE, FATALITIES = dt$FATALITIES, INJURIES = dt$INJURIES)
names(health)
dim(health)
dim(dt)
economic_impact <- data.frame(EVTYPE = dt$EVTYPE, dt$CROPDMG, dt$CROPDMGEXP, dt$PROPDMG, dt$PROPDMGEXP)
names(economic_impact)
names(economic_impact) <- c("EVTYPE", "CROPDMG", "CROPDMGEXP", "PROPDMG", "PROPDMGEXP")
names(economic_impact)
property <- rep(0, dim(dt)[1])
dim(property)
nrow(property)
nrows(property)
(property)
property
nrow(property)
row(property)
length(property)
crop <- rep(0, dim(dt)[1])
unique(dt$PROPDMGEXP)
length(unique(dt$EVTYPE))
health_impact <- data.frame(EVTYPE = dt$EVTYPE, FATALITIES = dt$FATALITIES, INJURIES = dt$INJURIES)
economic_impact <- data.frame(EVTYPE = dt$EVTYPE, CROP.DAMAGE = dt$CROPDMG, PROPERTY.DAMAGE = dt$PROPDMG)
property <- rep(0, times = dim(dt)[1])
crop <- rep(0, times = dim(dt)[1])
property[dt$PROPDMGEXP == "K" | dt$PROPDMGEXP == "k"] <- 1000
crop[dt$CROPDMGEXP == "K" | dt$CROPDMGEXP == "k"] <- 1000
property[dt$PROPDMGEXP == "M" | dt$PROPDMGEXP == "m"] <- 1e+06
crop[dt$CROPDMGEXP == "M" | dt$CROPDMGEXP == "m"] <- 1e+06
property[dt$PROPDMGEXP == "B" | dt$PROPDMGEXP == "b"] <- 1e+09
crop[dt$CROPDMGEXP == "B" | dt$CROPDMGEXP == "b"] <- 1e+09
for (i in as.character(0:9)) {
property[dt$PROPDMGEXP == i] <- 10 ^ as.numeric(i)
crop[dt$CROPDMGEXP == i] <- 10 ^ as.numeric(i)
}
economic_impact$CROP.DAMAGE <- dt$CROPDMG * crop
economic_impact$PROPERTY>DAMAGE <- dt$PROPDMG * property
economic_impact$PROPERTY.DAMAGE <- dt$PROPDMG * property
health_impact <- health_impact[health_impact$FATALITIES > 0 | health_impact$INJURIES > 0, ]
min(health_impact$INJURIES)
min(health_impact$FATALITIES)
range(health_impact$FATALITIES)
range(health_impact$INJURIES)
health_impact <- with(health_impact, health_impact[health_impact$FATALITIES > 0 | health_impact$INJURIES > 0, ])
range(health_impact$FATALITIES)
range(health_impact$FATALITIES)
range(health_impact$INJURIES)
economic_impact<- economic_impact[economic_impact$CROP.DAMAGE > 0 | economic_impact$PROPERTY.DAMAGE > 0,]
range(economic_impact)
range(economic_impact$CROP.DAMAGE)
fatalities <- aggregate(health_impact$FATALITIES, by = list(evtype = health_impact$EVTYPE), sum, na.rm = TRUE))
fatalities <- aggregate(health_impact$FATALITIES, by = list(evtype = health_impact$EVTYPE), sum, na.rm = TRUE)
plot(fatalities)
order(fatalities)
names(fatalities)
order_fatalities_x <- order(fatalities$x, decreasing=TRUE)
fatalities <- fatalities[order_fatalities_x,]
head(fatalities$x)
tail(fatalities$x)
mfrow(c(2, 1))
par(mfrow(c(2, 1))
)
par(mfrow=(c(2, 1)))
fatalities <- aggregate(health_impact$FATALITIES, by = list(evtype = health_impact$EVTYPE), sum, na.rm = TRUE)
injuries <- aggregate(health_impact$INJURIES, by = list(evtype = health_impact$EVTYPE), sum, na.rm = TRUE)
# Ordering weather events causing fatalities
order_fatalities_x <- order(fatalities$x, decreasing=TRUE)
fatalities <- fatalities[order_fatalities_x,]
# Ordering weather events causing injuries
order_injuries_x <- order(injuries$x, decreasing=TRUE)
injuries <- injuries[order_injuries_x, ]
plot(injuries)
plot(fatalities)
par(mfrow=(c(1, 2)))
plot(injuries)
plot(fatalities)
barplot(fatalities[1:10,]$x)
par(mfrow=c(1,2))
barplot(fatalities[1:6,]$x, main = "Weather Events causing Most Fatalities", xlab = "Weather Event", ylab = "Number of fatalities persons", col = "blue", ylim = range(fatalities$x))
barplot(injuries[1:6,]$x, main = "Weather Events causing Most Injuries", xlab = "Weather Event", ylab = "Number of injured persons", col = "red", ylim = range(injuries$x))
par(mfrow=c(1,2))
barplot(fatalities[1:6,]$x, main = "Weather Events causing Most Fatalities", xlab = "Weather Event", ylab = "Number of fatalities persons", col = "blue", ylim = range(fatalities$x))
axis(1, at = fatalities.plot, lab = fatalities$evtype[1:6], cex.axis = 0.7)
barplot(injuries[1:6,]$x, main = "Weather Events causing Most Injuries", xlab = "Weather Event", ylab = "Number of injured persons", col = "red", ylim = range(injuries$x))
axis(1, at = injuries.plot, lab = injuries$evtype[1:6], cex.axis = 0.7)
par(mfrow=c(1,2))
barplot(fatalities[1:6,]$x, main = "Weather Events causing Most Fatalities", xlab = "Weather Event", ylab = "Number of fatalities persons", col = "blue", ylim = range(fatalities$x))
axis(1, lab = fatalities$evtype[1:6], cex.axis = 0.7)
barplot(injuries[1:6,]$x, main = "Weather Events causing Most Injuries", xlab = "Weather Event", ylab = "Number of injured persons", col = "red", ylim = range(injuries$x))
axis(1, lab = injuries$evtype[1:6], cex.axis = 0.7)
par(mfrow=c(1,2))
fplot <- barplot(fatalities[1:6,]$x, main = "Weather Events causing Most Fatalities", xlab = "Weather Event", ylab = "Number of fatalities persons", col = "blue", ylim = range(fatalities$x))
axis(1, at = fplot, lab = fatalities$evtype[1:6], cex.axis = 0.7)
iplot <- barplot(injuries[1:6,]$x, main = "Weather Events causing Most Injuries", xlab = "Weather Event", ylab = "Number of injured persons", col = "red", ylim = range(injuries$x))
axis(1, at = iplot, lab = injuries$evtype[1:6], cex.axis = 0.7)
head(fatalities)
head(injuries)
par(mfrow=c(2,1))
head(fatalities)
fplot <- barplot(fatalities[1:6,]$x, main = "Weather Events causing Most Fatalities", xlab = "Weather Event", ylab = "Number of fatalities persons", col = "blue", ylim = range(fatalities$x))
axis(1, at = fplot, lab = fatalities$evtype[1:6], cex.axis = 0.7)
head(injuries)
iplot <- barplot(injuries[1:6,]$x, main = "Weather Events causing Most Injuries", xlab = "Weather Event", ylab = "Number of injured persons", col = "red", ylim = range(injuries$x))
axis(1, at = iplot, lab = injuries$evtype[1:6], cex.axis = 0.7)
economic_impact$TOTAL.DAMAGE <- economic_impact$CROP.DAMAGE + economic_impact$PROPERTY.DAMAGE
economic_impact$TOTAL.DAMAGE <- economic_impact$CROP.DAMAGE + economic_impact$PROPERTY.DAMAGE
economic <- aggregate(economic_impact$TOTAL.DAMAGE, by = list(evtype = economic_impact$EVTYPE), sum, na.rm = TRUE)
# Ordering weather events causing fatalities
order_economic_x <- order(economic$x, decreasing=TRUE)
economic <- economic[order_economic_x,]
economic$x <- economic$x/1e+06
head(economics)
eplot <- barplot(economic[1:6,]$x, main = "Weather Events causing Monetary Damage", xlab = "Weather Event", ylab = "Damage in US Dollars (millions)", col = "blue", ylim = range(economics$x))
axis(1, at = eplot, lab = economic$evtype[1:6], cex.axis = 0.7)
head(economic)
eplot <- barplot(economic[1:6,]$x, main = "Weather Events causing Monetary Damage", xlab = "Weather Event", ylab = "Damage in US Dollars (millions)", col = "blue", ylim = range(economic$x))
axis(1, at = eplot, lab = economic$evtype[1:6], cex.axis = 0.7)
dt
iplot <- barplot(injuries[1:6,]$x, main = "Weather Events causing Most Injuries", xlab = "Weather Event", ylab = "Number of injured persons", col = "red", ylim = range(injuries$x))
axis(1, at = iplot, lab = injuries$evtype[1:6], cex.axis = 0.7)
## Synopsis:
The basic goal of this article is to analyse the NOAA Storm Database and show impacts of NOAA storm on health and economics. The article shows the most harmful weather events that cause major impact to population health. The second phases shows the most harmful weather events that cause major economic damage.
========================================================
Title: Health and Economic Impact of NOAA Storm
